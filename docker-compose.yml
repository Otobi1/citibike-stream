version: '3.8'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    platform: linux/arm64/v8
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - citibike-network

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
        - citibike-network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - citibike-network

  spark:
    image: bitnami/spark:latest
    ports:
      - "8080:8080"
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_PORT=7077
    volumes:
      - ./spark_jobs:/opt/spark/jobs
      - ./python_app/jars:/opt/spark/jars
    networks:
      - citibike-network

  station_status_ingest:
    build: ./python_app
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - STATION_STATUS_URL=${STATION_STATUS_URL}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      - postgres
      - kafka
    networks:
      - citibike-network

  station_info_ingest:
    build: ./python_app
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - STATION_INFO_URL=${STATION_INFO_URL}
    depends_on:
      - postgres
    networks:
      - citibike-network
    command: [ "python", "station_information_to_postgres.py" ]
    restart: "no"

  tripdata_ingestor:
    build: ./python_app
    environment:
      - PROCESSED_DIR=/data/processed_tripdata
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=citibike_user
      - POSTGRES_PASSWORD=citibike_pass
      - POSTGRES_DB=citibike_db
    volumes:
      - ../data/processed_tripdata:/data/processed_tripdata
    depends_on:
      - postgres
    command: [ "python", "ingest_tripdata.py" ]
    networks:
      - citibike-network
    restart: "no"

volumes:
  postgres_data:
  tripdata_downloads:
  tripdata_processed:

networks:
  citibike-network:
    driver: bridge